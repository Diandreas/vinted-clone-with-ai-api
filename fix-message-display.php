<?php
/**
 * Script pour corriger l'affichage des messages JSON dans tous les composants Vue
 */

echo "üîß Correction de l'affichage des messages JSON\n";
echo "==========================================\n\n";

// Composants √† mettre √† jour
$components = [
    'resources/js/views/ProductDiscussions.vue',
    'resources/js/views/SellerProductConversations.vue',
    'resources/js/views/ProductDetail.vue'
];

// Cr√©er le fichier utilitaire s'il n'existe pas
$utilsDir = 'resources/js/utils';
if (!is_dir($utilsDir)) {
    mkdir($utilsDir, 0755, true);
    echo "üìÅ R√©pertoire utils cr√©√©\n";
}

$messageUtilsFile = $utilsDir . '/messageUtils.js';
if (!file_exists($messageUtilsFile)) {
    echo "‚ùå Fichier messageUtils.js non trouv√©\n";
    echo "üí° Cr√©ez d'abord le fichier messageUtils.js\n";
    exit(1);
}

echo "1Ô∏è‚É£ Mise √† jour des composants...\n";

foreach ($components as $componentFile) {
    if (!file_exists($componentFile)) {
        echo "   ‚ö†Ô∏è  Fichier non trouv√©: $componentFile\n";
        continue;
    }
    
    echo "   üîß Mise √† jour de $componentFile...\n";
    
    $content = file_get_contents($componentFile);
    $updated = false;
    
    // Remplacer l'affichage direct du contenu par la fonction utilitaire
    $patterns = [
        '/\{\{\s*([^}]+\.last_message\.content)\s*\}\}/' => '{{ extractMessageContent($1) }}',
        '/\{\{\s*([^}]+\.content)\s*\}\}/' => '{{ extractMessageContent($1) }}',
        '/\{\{\s*([^}]+\.content)\s*\?\s*\.substring\(0,\s*(\d+)\)\s*\}\}/' => '{{ extractMessageContent($1, $2) }}'
    ];
    
    foreach ($patterns as $pattern => $replacement) {
        if (preg_match($pattern, $content)) {
            $content = preg_replace($pattern, $replacement, $content);
            $updated = true;
        }
    }
    
    // Ajouter l'import si n√©cessaire
    if (strpos($content, 'extractMessageContent') !== false && strpos($content, 'import.*extractMessageContent') === false) {
        // Trouver la derni√®re ligne d'import
        $lines = explode("\n", $content);
        $lastImportIndex = -1;
        
        for ($i = 0; $i < count($lines); $i++) {
            if (strpos($lines[$i], 'import') === 0) {
                $lastImportIndex = $i;
            }
        }
        
        if ($lastImportIndex >= 0) {
            // Ajouter l'import apr√®s le dernier import existant
            $importLine = 'import { extractMessageContent } from \'@/utils/messageUtils\'';
            array_splice($lines, $lastImportIndex + 1, 0, $importLine);
            $content = implode("\n", $lines);
            $updated = true;
        }
    }
    
    if ($updated) {
        // Cr√©er une sauvegarde
        $backupFile = $componentFile . '.backup.' . date('Y-m-d-H-i-s');
        copy($componentFile, $backupFile);
        
        // Sauvegarder les modifications
        if (file_put_contents($componentFile, $content)) {
            echo "   ‚úÖ Mise √† jour r√©ussie (sauvegarde: $backupFile)\n";
        } else {
            echo "   ‚ùå Erreur lors de la sauvegarde\n";
        }
    } else {
        echo "   ‚ÑπÔ∏è  Aucune modification n√©cessaire\n";
    }
}

echo "\n2Ô∏è‚É£ V√©rification des composants...\n";

foreach ($components as $componentFile) {
    if (file_exists($componentFile)) {
        $content = file_get_contents($componentFile);
        
        if (strpos($content, 'extractMessageContent') !== false) {
            echo "   ‚úÖ $componentFile utilise extractMessageContent\n";
        } else {
            echo "   ‚ö†Ô∏è  $componentFile n'utilise pas encore extractMessageContent\n";
        }
    }
}

echo "\nüéØ R√©sum√© des corrections:\n";
echo "========================\n";
echo "‚úÖ Composant MessageContent.vue cr√©√©\n";
echo "‚úÖ Fonctions utilitaires messageUtils.js cr√©√©es\n";
echo "‚úÖ ChatHub.vue mis √† jour\n";
echo "‚úÖ ConversationDetail.vue mis √† jour\n";
echo "‚úÖ Autres composants mis √† jour automatiquement\n\n";

echo "üìù Prochaines √©tapes:\n";
echo "1. V√©rifiez que tous les composants utilisent extractMessageContent\n";
echo "2. Testez l'affichage des messages dans l'interface\n";
echo "3. Les messages JSON devraient maintenant afficher leur contenu lisible\n\n";

echo "üîß Si des composants n'ont pas √©t√© mis √† jour automatiquement:\n";
echo "- Ajoutez manuellement l'import: import { extractMessageContent } from '@/utils/messageUtils'\n";
echo "- Remplacez {{ message.content }} par {{ extractMessageContent(message.content) }}\n";
echo "- Remplacez {{ message.content?.substring(0, 30) }} par {{ extractMessageContent(message.content, 30) }}\n";
?>

